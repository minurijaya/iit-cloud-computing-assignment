apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingestion-service
  labels:
    app: ingestion-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingestion-service
  template:
    metadata:
      labels:
        app: ingestion-service
    spec:
      containers:
      - name: ingestion-service
        image: minurijayasooriya97/ingestion-service:IMAGE_VERSION
        ports:
        - containerPort: 3000
        env:
        - name: AWS_REGION
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: AWS_REGION
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: AWS_SECRET_ACCESS_KEY
        - name: REDSHIFT_DATABASE
          valueFrom:
            secretKeyRef:
              name: redshift-secret
              key: REDSHIFT_DATABASE
        - name: REDSHIFT_SECRET_ARN
          valueFrom:
            secretKeyRef:
              name: redshift-secret
              key: REDSHIFT_SECRET_ARN
        - name: REDSHIFT_WORKGROUP_NAME
          valueFrom:
            secretKeyRef:
              name: redshift-secret
              key: REDSHIFT_WORKGROUP_NAME
        - name: PORT
          value: "3000"
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
