name: Build, Test, and Deploy

on:
  push:
    branches:
      - main # Set a branch to deploy when pushed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build code
        run: echo "Building code..."

  test:
    needs: build  # Run after build job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Test code
        run: echo "Testing code..."

  publish-images:
    needs: test  # Run after test job
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [
          'appointment-service',
          'doctor-service',
          'patient-service',
          'ingestion-service',
          'aggregator-service'
        ]
    
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./services/${{ matrix.service }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            minurijayasooriya97/${{ matrix.service }}:latest
            minurijayasooriya97/${{ matrix.service }}:${{ github.sha }}
          cache-from: type=registry,ref=minurijayasooriya97/${{ matrix.service }}:latest
          cache-to: type=inline
          
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    needs: publish-images  # Run after publish-images job
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # - name: Connect to local network via Twingate
      #   uses: twingate/github-action@v1
      #   with:
      #     service-key: ${{ secrets.TWINGATE_SERVICE_KEY }}
      # - name: Configure SSH credentials
      #   uses: webfactory/ssh-agent@v0.7.0
      #   with:
      #     ssh-private-key: ${{ secrets.MAC_MINI_PRIVATE_KEY }}
      # - name: Create SSH tunnel
      #   run: ssh -N -L 18433:localhost:61648 remote@mac-mini.local &

      # - name: Deploy to Kubernetes cluster
      #   uses: actionhub/kubectl@master
      #   env:
      #     KUBECONFIG: ${{ secrets.KUBECONFIG }}
      #   with:
      #     args: get pods
          
